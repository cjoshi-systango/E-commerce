  openapi: 3.0.0
  info:
    version: 1.0.0
    title: E-commerce
    description: api docs for e-commerce
  servers:
    - url: http://localhost:4002
  components:
    securitySchemes:
      BearerAuth:
        type: http
        scheme: bearer
  tags:
    - name: User
      description: All the user related api
    - name: Order
      description: All the order realted api
    - name: Cart
      description: All the cart realted api
    - name: Product
      description: All the product realted api
  paths:
    /user/:
      post:
        description: Register user
        tags:
          - User
        produces:
        - application/json
        - application/xml
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/definations/User'
        responses: 
          '200':
            description: A User object
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      default: true
                    message:
                      type: string
                      default: user already exist
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/definations/inserted'
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError'         
      patch:
        description: Update User Details
        security: 
         - BearerAuth: []
        tags:
          - User
        produces:
        - application/json
        - application/xml
        parameters:
        - in: header
          name: AccessToken
          schema:
            type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/definations/User_update'
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/definations/inserted'
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/definations/notFound'
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError'
      get:
        description: get user details
        tags:
          - User
        security: 
         - BearerAuth: []
        produces:
        - application/json
        - application/xml
        parameters:
        - in: header
          name: AccessToken
          schema:
            type: string
        responses: 
          '200':
            description: A User object
            content:
              application/json:
                schema:
                  $ref: '#/definations/responseSchema/user'
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError'
    /user/login:
      post:
        description: login user
        tags:
          - User
        produces:
        - application/json
        - application/xml
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/definations/login'
        responses:
          '200':
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success: 
                      type: boolean
                      default: true
                    message: 
                      type: string 
                      default: Loged In 
            headers:
              Authorization:
                type: string
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError'
    /user/auth/google/callback:
      get:
        description: login with google
        tags:
          - User
        produces:
        - application/json
        - application/xml
        responses:
          '200':
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success: 
                      type: boolean
                      default: true
                    message: 
                      type: string 
                      default: Loged In 
                    data: 
                      type: string 
                      default: Loged In
            headers:
              Authorization:
                type: string
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError'
    /user/logout:
      get:
        description: loged out current user session
        security: 
         - BearerAuth: []
        tags:
          - User
        produces:
        - application/json
        - application/xml
        paramenters:
          - in: header
            name: AccessToken
            schema:
              type: string
        responses:
          default:
            description: loged out
    /user/userrole:
      post:
        description: only admin can create user role
        security: 
         - BearerAuth: []
        tags:
          - User
        produces:
        - application/json
        - application/xml
        paramenters:
          - in: header
            name: AccessToken
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/definations/User_role'
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/definations/inserted'
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/definations/unautorizedActivity'
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError'
    /user/useraddress:
      post:
        description: only loged in can add user address
        security: 
         - BearerAuth: []
        tags:
          - User
        produces:
        - application/json
        - application/xml
        paramenters:
          - in: header
            name: AccessToken
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/definations/User_address'
        responses:
          '200':
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success: 
                      type: boolean
                      default: false
                    message: 
                      type: string       
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/definations/inserted'
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError'   
    /user/forgetpassword:
      put:
        description: user forget password
        tags:
          - User
        produces:
        - application/json
        - application/xml
        parameters:
        - in: query
          name: email
          description: Enter registred email 
          required: true
          type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success: 
                      type: boolean
                      default: false
                    message: 
                      type: string 
                      default: check your mail      
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError'   
    /user/resetpassword:
      put:
        description: reset password 
        security: 
         - BearerAuth: []
        tags:
          - User
        produces:
        - application/json
        - application/xml
        parameters:
        - in: query
          name: oldpassword
          description: Enter your password 
          required: true
          schema:
            type: string
        - in: query
          name: newpassword
          description: Enter new password 
          required: true
          type: string
        - in: header
          name: AccessToken
          schema:
            type: string
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/definations/inserted'
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/definations/notFound'
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError'   
    /product/:
      post:
        description: Add product
        security: 
         - BearerAuth: []
        tags:
          - Product
        consumes:
          - multipart/form-data
        produces:
        - application/json
        - application/xml
        parameters:
          - in: header
            name: AccessToken
            schema:
              type: string
          - in: formData
            name: img
            type: file
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/definations/product'
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/definations/inserted'
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/definations/unautorizedActivity'
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError'
      get:
        description: get all product
        security: 
         - BearerAuth: []
        tags:
          - Product
        produces:
        - application/json
        - application/xml
        parameters:
          - in: header
            name: AccessToken
            schema:
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/definations/responseSchema/allproduct'                    
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError'
    /product/{id}:
      get:
        description: get product by id
        security: 
         - BearerAuth: []
        tags:
          - Product
        produces:
        - application/json
        - application/xml
        parameters:
        - in: path
          name: id
          description: get product by id
          required: true
          type: integer
          maximum: 10.0
          minimum: 1.0
          format: int64
        - in: header
          name: AccessToken
          schema:
            type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/definations/responseSchema/product' 
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError'
      delete:
        description: delete product
        security: 
         - BearerAuth: []
        tags:
          - Product
        produces:
        - application/json
        - application/xml
        parameters:
        - in: path
          name: id
          description: get product by id
          required: true
          type: integer
          maximum: 10.0
          minimum: 1.0
          format: int64
        - in: header
          name: AccessToken
          schema:
            type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success: 
                      type: boolean
                      default: true
                    message: 
                      type: string 
                      default: deleted successfully      
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError' 
    /cart/{id}:
      post:
        description: add product to cart
        security: 
         - BearerAuth: []
        tags:
          - Cart
        produces:
        - application/json
        - application/xml
        parameters:
        - in: path
          name: id
          description: Add product id
          required: true
          type: integer
          maximum: 10.0
          minimum: 1.0
          format: integer
        - in: header
          name: AccessToken
          schema:
            type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/definations/addToCart'
        responses:
          '401':
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success: 
                      type: boolean
                      default: false
                    message: 
                      type: string       
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/definations/inserted'
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError'   
      delete:
        description: remove item from cart
        security: 
         - BearerAuth: []
        tags:
          - Cart
        produces:
        - application/json
        - application/xml
        parameters:
        - in: path
          name: id
          description: remove product from cart by id
          required: true
          type: integer
          maximum: 10.0
          minimum: 1.0
          format: integer
        - in: header
          name: AccessToken
          schema:
            type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success: 
                      type: boolean
                      default: true
                    message: 
                      type: string 
                      default: deleted successfully      
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError' 
    /cart/:
      get:
        description: get products from cart
        security: 
         - BearerAuth: []
        tags:
          - Cart
        produces:
        - application/json
        - application/xml
        parameters:
        - in: header
          name: AccessToken
          schema:
            type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success: 
                      type: boolean
                      default: true
                    data: 
                      type: object
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/definations/notFound'
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError'
    /order/{id}:
      post:
        description: place order
        security: 
         - BearerAuth: []
        tags:
          - Order
        produces:
        - application/json
        - application/xml
        parameters:
        - in: path
          name: id
          description: place order by id
          required: true
          type: integer
          maximum: 10.0
          minimum: 1.0
          format: integer
        - in: header
          name: AccessToken
          schema:
            type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/definations/order'
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/definations/inserted'
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/definations/notFound'
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError'
    /order/history:
      get:
        description: see order history
        security: 
         - BearerAuth: []
        tags:
          - Order
        produces:
        - application/json
        - application/xml
        parameters:
        - in: header
          name: AccessToken
          schema:
            type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/definations/responseSchema/order'
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/definations/notFound'
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/definations/internalServerError'
  definations:
    User:
      type: object
      properties:
        fullname:
          type: string
        email:
          type: string
        password:
          type: string
        mobile_no:
          type: string
        title:
          type: string
          enum: [Seller,User]
    User_role:
      type: object
      properties:
        tilte:
          type: string
          enum: [Admin,Seller,User]
        read:
          type: boolean
        write:
          type: boolean
        delete:
          type: boolean
    User_address:
      type: object
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        country:
          type: string
        pincode:
          type: integer
        address_type:
          type: string
          enum: [Primary,Secondry]
    User_update:
      type: object
      properties:
        fullname:
          type: string
        email:
          type: string
        password:
          type: string
        mobile_no:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        country:
          type: string
        pincode:
          type: integer
        addressType:
          type: string
          enum: [Primary,Secondry]
    product:
      type: object
      properties:
        name:
          type: string
        details:
          type: string
        quantity:
          type: integer
        price:
          type: integer
    cart:
      type: object
      properties:
        id:
          type: integer
        productName:
          type: string
        productPrice:
          type: integer
        productDetails:
          type: integer
    order:
      type: object
      properties:
        quantity:
          type: integer
    addToCart:
      type: object
      properties:
        quantity:
          type: integer
    login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    inserted:
      type: object
      properties:
        success: 
          type: boolean
          default: true
        message: 
          type: string
          default: Inserted Successfully
    internalServerError:
      type: object
      properties:
        success: 
          type: boolean
          default: false
        message: 
          type: string
          default: Someting Went Wrong
    unautorizedActivity:
      type: object
      properties:
        success: 
          type: boolean
          default: false
        message: 
          type: string
          default: Unauthorized Activity
    notFound:
      type: object
      properties:
        success: 
          type: boolean
          default: false
        message: 
          type: string
    responseSchema:
      allproduct:
        type: object
        properties:
          success:
            type: boolean
            default: true
          data:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                details:
                  type: string
                price:
                  type: integer
                inventory_id: 
                  type: integer
                added_by: 
                  type: integer
                createdAt: 
                  type: string
                  format: date-time
                updatedAt: 
                  type: string
                  format: date-time
                product_inventory: 
                  type: object
                  properties:
                    id:
                      type: integer
                    quantity:
                      type: integer
                    createdAt: 
                      type: string
                      format: date-time
                    updatedAt: 
                      type: string
                      format: date-time
                product_image:
                  type: object
                  properties:
                    id:
                      type: integer
                    image:
                      type: string
                    product_id:
                      type: integer
                    createdAt: 
                      type: string
                      format: date-time
                    updatedAt: 
                      type: string
                      format: date-time
      product:
        type: object
        properties:
          success:
            type: boolean
            default: true
          data:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              details:
                type: string
              price:
                type: integer
              inventory_id: 
                type: integer
              added_by: 
                type: integer
              createdAt: 
                type: string
                format: date-time
              updatedAt: 
                type: string
                format: date-time
              product_inventory: 
                type: object
                properties:
                  id:
                    type: integer
                  quantity:
                    type: integer
                  createdAt: 
                    type: string
                    format: date-time
                  updatedAt: 
                    type: string
                    format: date-time
              product_image:
                type: object
                properties:
                  id:
                    type: integer
                  image:
                    type: string
                  product_id:
                    type: integer
                  createdAt: 
                    type: string
                    format: date-time
                  updatedAt: 
                    type: string
                    format: date-time
      cart:
        type: object
        properties:
          success:
            type: boolean
            default: true
          data:
            type: object
            properties:
              id:
                type: integer
              quantity:
                type: string
              productId:
                type: integer
              userId:
                type: integer
              total_amount: 
                type: integer
              createdAt: 
                type: string
                format: date-time
              updatedAt: 
                type: string
                format: date-time
              product:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  details:
                    type: string
                  price:
                    type: integer
                  inventory_id: 
                    type: integer
                  added_by: 
                    type: integer
                  createdAt: 
                    type: string
                    format: date-time
                  updatedAt: 
                    type: string
                    format: date-time
                  product_inventory: 
                    type: object
                    properties:
                      id:
                        type: integer
                      quantity:
                        type: integer
                      createdAt: 
                        type: string
                        format: date-time
                      updatedAt: 
                        type: string
                        format: date-time
                  product_image:
                    type: object
                    properties:
                      id:
                        type: integer
                      image:
                        type: string
                      product_id:
                        type: integer
                      createdAt: 
                        type: string
                        format: date-time
                      updatedAt: 
                        type: string
                        format: date-time     
      order:
        type: object
        properties:
          success:
            type: boolean
            default: true
          data:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                quantity:
                  type: integer
                status:
                  type: string
                amount:
                  type: integer
                productId: 
                  type: integer
                userId: 
                  type: integer
                cartId: 
                  type: integer
                createdAt: 
                  type: string
                  format: date-time
                updatedAt: 
                  type: string
                  format: date-time
                deletedAt: 
                  type: string
                  format: date-time
                  default: null
                product: 
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    details:
                      type: string
                    price:
                      type: integer
                    inventory_id: 
                      type: integer
                    added_by: 
                      type: integer
                    createdAt: 
                      type: string
                      format: date-time
                    updatedAt: 
                      type: string
                      format: date-time
      user:
        type: object
        properties:
          success:
            type: boolean
            default: true
          data:
            type: object
            properties:
              id:
                type: integer
              fullname:
                type: string
              email:
                type: string
              password:
                type: string
              googleId: 
                type: string
              provider: 
                type: string
              mobile_no: 
                type: string
              userRoleId: 
                type: integer
              createdAt: 
                type: string
                format: date-time
              updatedAt: 
                type: string
                format: date-time
              user_address:
                type: object
                properties:
                  id:
                    type: integer
                  address_line1:
                    type: string
                  address_line2:
                    type: string
                  address_type:
                    type: string
                  city: 
                    type: string
                  country: 
                    type: string
                  pincode: 
                    type: integer
                  userId: 
                    type: integer
                  createdAt: 
                    type: string
                    format: date-time
                  updatedAt: 
                    type: string
                    format: date-time
                  